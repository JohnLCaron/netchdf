// Generated by jextract

package com.sunya.netchdf.mfhdfClib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$189 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$189() {}
    static final MethodHandle const$0 = RuntimeHelper.downcallHandle(
        "GR2bmapped",
        constants$26.const$5
    );
    static final UnionLayout const$1 = MemoryLayout.unionLayout(
        MemoryLayout.sequenceLayout(32, JAVA_INT).withName("chunk_lengths"),
        MemoryLayout.structLayout(
            MemoryLayout.sequenceLayout(32, JAVA_INT).withName("chunk_lengths"),
            JAVA_INT.withName("comp_type"),
            JAVA_INT.withName("model_type"),
            MemoryLayout.unionLayout(
                MemoryLayout.structLayout(
                    JAVA_INT.withName("quality"),
                    JAVA_INT.withName("force_baseline")
                ).withName("jpeg"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("nt"),
                    JAVA_INT.withName("sign_ext"),
                    JAVA_INT.withName("fill_one"),
                    JAVA_INT.withName("start_bit"),
                    JAVA_INT.withName("bit_len")
                ).withName("nbit"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("skp_size")
                ).withName("skphuff"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("level")
                ).withName("deflate"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("options_mask"),
                    JAVA_INT.withName("pixels_per_block"),
                    JAVA_INT.withName("pixels_per_scanline"),
                    JAVA_INT.withName("bits_per_pixel"),
                    JAVA_INT.withName("pixels")
                ).withName("szip")
            ).withName("cinfo"),
            MemoryLayout.paddingLayout(4),
            MemoryLayout.unionLayout(
                MemoryLayout.structLayout(
                    JAVA_INT.withName("nt"),
                    JAVA_INT.withName("ndim"),
                    RuntimeHelper.POINTER.withName("dims")
                ).withName("dim")
            ).withName("minfo")
        ).withName("comp"),
        MemoryLayout.structLayout(
            MemoryLayout.sequenceLayout(32, JAVA_INT).withName("chunk_lengths"),
            JAVA_INT.withName("start_bit"),
            JAVA_INT.withName("bit_len"),
            JAVA_INT.withName("sign_ext"),
            JAVA_INT.withName("fill_one")
        ).withName("nbit")
    ).withName("hdf_chunk_def_u");
    static final StructLayout const$2 = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(32, JAVA_INT).withName("chunk_lengths"),
        JAVA_INT.withName("comp_type"),
        JAVA_INT.withName("model_type"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("quality"),
                JAVA_INT.withName("force_baseline")
            ).withName("jpeg"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("nt"),
                JAVA_INT.withName("sign_ext"),
                JAVA_INT.withName("fill_one"),
                JAVA_INT.withName("start_bit"),
                JAVA_INT.withName("bit_len")
            ).withName("nbit"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("skp_size")
            ).withName("skphuff"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("level")
            ).withName("deflate"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("options_mask"),
                JAVA_INT.withName("pixels_per_block"),
                JAVA_INT.withName("pixels_per_scanline"),
                JAVA_INT.withName("bits_per_pixel"),
                JAVA_INT.withName("pixels")
            ).withName("szip")
        ).withName("cinfo"),
        MemoryLayout.paddingLayout(4),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("nt"),
                JAVA_INT.withName("ndim"),
                RuntimeHelper.POINTER.withName("dims")
            ).withName("dim")
        ).withName("minfo")
    ).withName("");
    static final VarHandle const$3 = constants$189.const$2.varHandle(MemoryLayout.PathElement.groupElement("comp_type"));
    static final VarHandle const$4 = constants$189.const$2.varHandle(MemoryLayout.PathElement.groupElement("model_type"));
    static final StructLayout const$5 = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(32, JAVA_INT).withName("chunk_lengths"),
        JAVA_INT.withName("start_bit"),
        JAVA_INT.withName("bit_len"),
        JAVA_INT.withName("sign_ext"),
        JAVA_INT.withName("fill_one")
    ).withName("");
}


